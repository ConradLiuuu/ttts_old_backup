#!/usr/bin/env python
PACKAGE = "ttts"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

##gen.add("param name", type, level, description, defualt, min, max)
##type: int_t, double_t, str_t, bool_t
gen.add("H_min_L", int_t, 0, "Minimum of Hue", 0, 0, 255)
gen.add("H_max_L", int_t, 0, "Maximum of Hue", 255, 0, 255)
gen.add("S_min_L", int_t, 0, "Minimum of Saturation", 0, 0, 255)
gen.add("S_max_L", int_t, 0, "Maximum of Saturation", 255, 0, 255)
gen.add("V_min_L", int_t, 0, "Minimum of Value", 0, 0, 255)
gen.add("V_max_L", int_t, 0, "Maximum of Value", 255, 0, 255)

gen.add("H_min_R", int_t, 0, "Minimum of Hue", 0, 0, 255)
gen.add("H_max_R", int_t, 0, "Maximum of Hue", 255, 0, 255)
gen.add("S_min_R", int_t, 0, "Minimum of Saturation", 0, 0, 255)
gen.add("S_max_R", int_t, 0, "Maximum of Saturation", 255, 0, 255)
gen.add("V_min_R", int_t, 0, "Minimum of Value", 0, 0, 255)
gen.add("V_max_R", int_t, 0, "Maximum of Value", 255, 0, 255)

##enumerate
##enum_name = gen.enum([gen.const("name", type, level, description)], "description of enum")
##gen.add("name", type, level, "description", defualt, min, max, edit_method=enum_name) 

#S_V_min = gen.enum([
#gen.const("S_min", int_t, 0, "Minimum of Saturation"),
#gen.const("V_min", int_t, 0, "Minimum of Value")
#],"An enum to set mins of S and V")

#gen.add("S_V_min", int_t, 0, "An enum to set mins of S and V", 0, 0, 127, edit_method=S_V_min)

##exit(gen.generate(PACKAGE, "node_name", "file_name"))
exit(gen.generate(PACKAGE, "ttts", "HSV"))

